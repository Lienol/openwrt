From: Christian Lamparter <chunkeey@googlemail.com>
From: Oever González <notengobattery@gmail.com>
Subject: [PATCH] net: essedma: disable default vlan tagging
Date: Sun, 6 Oct 2019 21:47:05 -0600

The essedma driver has its own unique take on VLAN management
and its configuration. In the original SDK, each VLAN is
assigned one virtual ethernet netdev.

However, this is non-standard. So, this patch does away
with the default_vlan_tag property the driver is using
and therefore forces the user to use the kernel's vlan
feature.

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
Signed-off-by: Oever González <notengobattery@gmail.com>
---
--- a/arch/arm/boot/dts/qcom-ipq4019.dtsi
+++ b/arch/arm/boot/dts/qcom-ipq4019.dtsi
@@ -631,7 +631,7 @@
 			qcom,rx_head_buf_size = <1540>;
 			qcom,mdio_supported;
 			qcom,poll_required = <1>;
-			qcom,num_gmac = <2>;
+			qcom,num_gmac = <1>;
 			interrupts = <0  65 IRQ_TYPE_EDGE_RISING
 				      0  66 IRQ_TYPE_EDGE_RISING
 				      0  67 IRQ_TYPE_EDGE_RISING
@@ -669,7 +669,7 @@
 
 			gmac0: gmac0 {
 				local-mac-address = [00 00 00 00 00 00];
-				vlan_tag = <1 0x1f>;
+				vlan_tag = <1 0x3f>;
 			};
 
 			gmac1: gmac1 {
--- a/drivers/net/ethernet/qualcomm/essedma/edma.c
+++ b/drivers/net/ethernet/qualcomm/essedma/edma.c
@@ -729,13 +729,11 @@ static u16 edma_rx_complete(struct edma_
 			edma_receive_checksum(rd, skb);
 
 			/* Process VLAN HW acceleration indication provided by HW */
-			if (unlikely(adapter->default_vlan_tag != rd->rrd4)) {
-				vlan = rd->rrd4;
-				if (likely(rd->rrd7 & EDMA_RRD_CVLAN))
-					__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), vlan);
-				else if (rd->rrd1 & EDMA_RRD_SVLAN)
-					__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021AD), vlan);
-			}
+			vlan = rd->rrd4;
+			if (likely(rd->rrd7 & EDMA_RRD_CVLAN))
+				__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), vlan);
+			else if (rd->rrd1 & EDMA_RRD_SVLAN)
+				__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021AD), vlan);
 
 			/* Update rx statistics */
 			adapter->stats.rx_packets++;
@@ -1414,8 +1412,6 @@ netdev_tx_t edma_xmit(struct sk_buff *sk
 	/* Check and mark VLAN tag offload */
 	if (unlikely(skb_vlan_tag_present(skb)))
 		flags_transmit |= EDMA_VLAN_TX_TAG_INSERT_FLAG;
-	else if (!adapter->edma_cinfo->is_single_phy && adapter->default_vlan_tag)
-		flags_transmit |= EDMA_VLAN_TX_TAG_INSERT_DEFAULT_FLAG;
 
 	/* Check and mark checksum offload */
 	if (likely(skb->ip_summed == CHECKSUM_PARTIAL))
