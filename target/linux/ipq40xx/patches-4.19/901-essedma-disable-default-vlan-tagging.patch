From 42b508d91b7f51b054f383e3aa42089ccab9300d Mon Sep 17 00:00:00 2001
From: Chen Minqiang <ptpt52@gmail.com>
Date: Thu, 15 Mar 2018 05:33:46 +0800
Subject: [PATCH] essedma: disable default vlan tagging

The essedma driver has its own unique take on VLAN management
and its configuration. In the original SDK, each VLAN is
assigned one virtual ethernet netdev.

However, this is non-standard. So, this patch does away
with the default_vlan_tag property the driver is using
and therefore forces the user to use the kernel's vlan
feature.

This patch also removes the "qcom,poll_required = <1>;" from
the essedma node.

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
Signed-off-by: Chen Minqiang <ptpt52@gmail.com>
---
 arch/arm/boot/dts/qcom-ipq4019.dtsi          |  5 ++---
 drivers/net/ethernet/qualcomm/essedma/edma.c | 14 +++++---------
 2 files changed, 7 insertions(+), 12 deletions(-)

diff --git a/arch/arm/boot/dts/qcom-ipq4019.dtsi b/arch/arm/boot/dts/qcom-ipq4019.dtsi
index 3c4617f..7c3af8e 100644
--- a/arch/arm/boot/dts/qcom-ipq4019.dtsi
+++ b/arch/arm/boot/dts/qcom-ipq4019.dtsi
@@ -598,8 +598,7 @@
 			qcom,page-mode = <0>;
 			qcom,rx_head_buf_size = <1540>;
 			qcom,mdio_supported;
-			qcom,poll_required = <1>;
-			qcom,num_gmac = <2>;
+			qcom,num_gmac = <1>;
 			interrupts = <0  65 IRQ_TYPE_EDGE_RISING
 				      0  66 IRQ_TYPE_EDGE_RISING
 				      0  67 IRQ_TYPE_EDGE_RISING
@@ -637,7 +636,7 @@
 
 			gmac0: gmac0 {
 				local-mac-address = [00 00 00 00 00 00];
-				vlan_tag = <1 0x1f>;
+				vlan_tag = <1 0x3f>;
 			};
 
 			gmac1: gmac1 {
diff --git a/drivers/net/ethernet/qualcomm/essedma/edma.c b/drivers/net/ethernet/qualcomm/essedma/edma.c
index 05f9ce9..a3c0d66 100644
--- a/drivers/net/ethernet/qualcomm/essedma/edma.c
+++ b/drivers/net/ethernet/qualcomm/essedma/edma.c
@@ -750,13 +750,11 @@ static void edma_rx_complete(struct edma_common_info *edma_cinfo,
 			edma_receive_checksum(rd, skb);
 
 			/* Process VLAN HW acceleration indication provided by HW */
-			if (unlikely(adapter->default_vlan_tag != rd->rrd4)) {
-				vlan = rd->rrd4;
-				if (likely(rd->rrd7 & EDMA_RRD_CVLAN))
-					__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), vlan);
-				else if (rd->rrd1 & EDMA_RRD_SVLAN)
-					__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021AD), vlan);
-			}
+			vlan = rd->rrd4;
+			if (likely(rd->rrd7 & EDMA_RRD_CVLAN))
+				__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), vlan);
+			else if (rd->rrd1 & EDMA_RRD_SVLAN)
+				__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021AD), vlan);
 
 			/* Update rx statistics */
 			adapter->stats.rx_packets++;
@@ -1434,8 +1432,6 @@ netdev_tx_t edma_xmit(struct sk_buff *skb,
 	if (!adapter->edma_cinfo->is_single_phy) {
 		if (unlikely(skb_vlan_tag_present(skb)))
 			flags_transmit |= EDMA_VLAN_TX_TAG_INSERT_FLAG;
-		else if (adapter->default_vlan_tag)
-			flags_transmit |= EDMA_VLAN_TX_TAG_INSERT_DEFAULT_FLAG;
 	}
 
 	/* Check and mark checksum offload */
-- 
2.7.4

